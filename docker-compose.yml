version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: kitchensink-backend
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=${POSTGRES_URL:-jdbc:postgresql://postgres:5432/kitchensink}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-mysecretpassword}
      - SPRING_DATA_MONGODB_URI=${MONGODB_URI:-mongodb://mongodb:27017/kitchensink}
      - SPRING_DATA_MONGODB_DATABASE=${MONGODB_DATABASE:-kitchensink}
      - SPRING_DATA_MONGODB_AUTO_INDEX_CREATION=false
      - SPRING_FLYWAY_ENABLED=true
      - SPRING_FLYWAY_BASELINE_ON_MIGRATE=true
      - SPRING_FLYWAY_VALIDATE_ON_MIGRATE=true
      - SPRING_FLYWAY_MONGODB_ENABLED=true
      - SPRING_FLYWAY_LOCATIONS=classpath:db/migration/postgresql
      - SPRING_FLYWAY_MONGODB_LOCATIONS=classpath:db/migration/mongodb
    depends_on:
      mongodb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kitchensink-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend/webapp:/usr/share/nginx/html

  frontend-performance-tests:
    build: 
      context: ./frontend/webapp
      dockerfile: Dockerfile
    container_name: frontend-performance-tests
    profiles:
      - performance
    depends_on:
      - frontend
      - backend
    volumes:
      - ./performance-reports:/app/performance-reports:rw
      - ./frontend/webapp:/app:rw
    environment:
      - NODE_ENV=test
      - DOCKER_BUILD_ID=${DOCKER_BUILD_ID:-latest}
      - TIMESTAMP=${TIMESTAMP:-$(date +%Y%m%d_%H%M%S)}
    networks:
      - app-network
    command: sh /app/docker-performance-test.sh

  backend-performance-tests:
    build: 
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: backend-performance-tests
    profiles:
      - performance
    volumes:
      - ./performance-reports:/app/performance-reports:rw
      - ./backend/target:/app/target:rw
    depends_on:
      mongodb:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=test
      - MONGODB_URI=mongodb://mongodb:27017/kitchensink
      - POSTGRES_URL=jdbc:postgresql://postgres:5432/kitchensink
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - TIMESTAMP=${TIMESTAMP:-$(date +%Y%m%d_%H%M%S)}
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"
    volumes:
      - ./data/mongodb:/data/db:rw
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_DB=kitchensink
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
    ports:
      - "5433:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data:rw
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    name: kitchensink_mongodb_data
  postgres_data:
    name: kitchensink_postgres_data 